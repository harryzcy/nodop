name: Releases

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  release:
    name: Release on GitHub
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - uses: release-drafter/release-drafter@3f0f87098bd6b5c5b9a36d49c41d998ea58f9348 # v6
        id: release_drafter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish Release
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: ${{ steps.release_drafter.outputs.id }},
              tag_name: '${{ github.ref_name }}',
              name: 'Release ${{ github.ref_name }}',
              draft: context.eventName != 'push'
            });

  docker:
    name: Build Docker Image
    strategy:
      matrix:
        base-image: [alpine3.20, bookworm, bullseye, buster]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Set up tags
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          IMAGE_NAME: harryzcy/nodop
          BASE_IMAGE: ${{ matrix.base-image }}
        with:
          script: |
            const image_name = process.env.IMAGE_NAME
            const tag_name = context.eventName == 'push' ? process.env.GITHUB_REF_NAME : 'v0.0.0'
            const base_image = process.env.BASE_IMAGE
            const [major, minor, patch] = tag_name.slice(1).split('.')
            const version_tags = [
              `${image_name}:${major}`,
              `${image_name}:${major}.${minor}`,
              `${image_name}:${major}.${minor}.${patch}`,
            ]
            const tags = []
            if (base_image === 'alpine3.20') {
              tags.push(...version_tags.map(tag => `${tag}-alpine`))
              tags.push(...version_tags.map(tag => `${tag}-alpine3.20`))
              tags.push(`${image_name}:alpine`, `${image_name}:alpine3.20`)
              core.exportVariable('DOCKERFILE_NAME', 'docker/Dockerfile.alpine')
            } else if (base_image === 'bookworm') {
              tags.push(...version_tags.map(tag => `${tag}-${base_image}`))
              tags.push(...version_tags)
              tags.push(`${image_name}:${base_image}`, `${image_name}:latest`)
              core.exportVariable('DOCKERFILE_NAME', `docker/Dockerfile.${base_image}`)
            } else if (base_image === 'bullseye' || base_image === 'buster') {
              tags.push(...version_tags.map(tag => `${tag}-${base_image}`))
              tags.push(`${image_name}:${base_image}`)
              core.exportVariable('DOCKERFILE_NAME', `docker/Dockerfile.${base_image}`)
            } else {
              process.exit(1)
            }
            core.exportVariable('IMAGE_TAGS', tags.join(','))

      - name: Set up QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # v3.3.0

      - name: Login to DockerHub
        uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build without push
        if: github.event_name == 'workflow_dispatch'
        uses: docker/build-push-action@31159d49c0d4756269a0940a750801a1ea5d7003 # v6.1.0
        with:
          context: .
          file: ${{ env.DOCKERFILE_NAME }}
          platforms: linux/amd64,linux/arm64/v8
          push: false
          tags: ${{ env.IMAGE_TAGS }}

      - name: Build and push
        if: github.event_name == 'push'
        uses: docker/build-push-action@31159d49c0d4756269a0940a750801a1ea5d7003 # v6.1.0
        with:
          context: .
          file: ${{ env.DOCKERFILE_NAME }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ env.IMAGE_TAGS }}
